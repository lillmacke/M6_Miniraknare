import sympy as sp

# SYMBOL
x = sp.Symbol("x")

# MENYER
huvudmeny = {
    "1": "Vanlig beräkning",
    "2": "Derivering",
    "3": "Integreration",
    "4": "Avsluta"
}

eftermeny = {
    "1": "Visa grafen",
    "2": "Räkna ut ett nytt uttryck",
    "3": "Gå tillbaka till menyn"
}

efter_eftermeny = {
    "1": "Räkna ett nytt uttryck",
    "2": "Gå tillbaka till menyn"
}

#FUNKTIONER 

def meny(title,prompt,options):
    print(f"\n{title}\n")
    for key, value in options.items():
        print(f"{key}) {value}")

    while True:
        val = input(prompt).strip()
        if val in options:
            return val
        print("Fel alternativ, försök igen.")


def beräkna(uttryck):
    try:
        expr = sp.sympify(uttryck).lower()
        return expr.evalf()
    except Exception as e:
        print("Fel i uttrycket: ", e)
        return None
    
def kolla_input(prompt, converter=float, default=None):
    while True:
        svar = input(prompt)
        if not svar and default is not None:
            return default
        try:
            return converter(svar)
        except ValueError:
            print("Felaktig inmatning, försök igen")


def plotta_funktioner(funktioner, x, default_a=-10, default_b=10):
    a = kolla_input(f"Nedre gräns för x (Tryck Enter för {default_a}): ", default=default_a)
    b = kolla_input(f"Övre gräns för x (Tryck Enter för {default_b}): ", deafult=default_b)
    
    sp.plot(
        *funktioner,
        (x, a, b),
        legend = True,
        show = True
    )
    
def efter_beräkning_meny(uttryck, x, extra_funktion=None, extra_label=None):
    while True:
        val = meny("Vad vill du göra nu? ", "Jag väljer: ", eftermeny)

        if val == "1":
            funktioner = [(uttryck, {"line_color": "blue", "label": "f(x)"})]
            if extra_funktion is not None:
                funktioner.append((extra_funktion, {"line_color": "red", "label": extra_label}))
            plotta_funktioner(funktioner, x)

            efter_val = meny("Vad vill du  göra nu?", "Jag väljer: ", efter_eftermeny)
            if efter_val == "1":
                return "ny"
            else:
                break

        elif val == "2":
            return "ny"
        
        elif val == "3":
            break

def vanlig_beräkning():
    while True:
        uttryck = input("Skriv ett uttryck: ")
        resultat = beräkna(uttryck)
        if resultat is not None:
            print("Resultat: ")
            sp.pprint(resultat)

        if input("Vill du göra en ny beräkning? (ja/nej): ").lower() == "nej":
                break
        
def derivering():
    while True:
        uttryck = input("Ange ett uttryck: ").lower()
        expr = sp.sympify(uttryck)
        derivata = sp.diff(expr, x)

        print(f"Derivatan av ({expr}) är: ")
        sp.pprint(derivata)

        status = efter_beräkning_meny(expr, x, derivata, "f'(x)")
        if status != "ny":
            break


def integrering():
    while True:
        uttryck = input("Ange ett uttryck: ").lower()
        expr = sp.sympify(uttryck)

        bestämd = input("Bestämda gränser? (ja/nej): ").lower()
        if bestämd == "ja":
            a = kolla_input("Nedre gränsen för x: ")
            b = kolla_input("Övre Gränsen för x: ")
            integral = sp.integrate(expr, (x, a, b))
            print(f"Integralen av ({expr}) från {a} till {b} är: ")
            sp.pprint(integral)
        else: 
            integral = sp.integrate(expr, x)
            print(f"Integralen av ({expr}) (med konstant C) är: ")
            sp.pprint(integral)
        
        status = efter_beräkning_meny(expr, x, integral, "∫f(x)")
        if status != "ny":
            break


# HUVUDPROGRAM

while True:
    val = meny("Välj räknesätt: ",
               "Jag väljer: ",
               huvudmeny
    )

    # VANLIG BERÄKNING:
    if val == "1":
        vanlig_beräkning()  

    # DERIVERING:
    elif  val =='2':
        derivering()

    # INTEGRERING
    elif  val =='3':
        integrering()

    # AVSLUTA PROGRAMMET
    elif val == "4":
        print("Programmet avslutas.")
        break