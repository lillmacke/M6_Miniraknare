import sympy as sp
sp.init_printing()


#FUNKTIONER 

def meny(title,prompt,options):
    print(f"\n{title}\n")
    for key, value in options.items():
        print(f"{key}) {value}")

    while True:
        val = input(prompt).strip()
        if val in options:
            return val
        print("Fel alternativ, försök igen.")


def beräkna(uttryck):
    try:
        uttryck = uttryck.replace("X","x")
        expr = sp.sympify(uttryck)
        return expr.evalf()
    except Exception as e:
        print("Fel i uttrycket: ", e)
        return None

def plotta_funktioner(funktioner, x, default_a=-10, default_b=10):
    try:
        a = input("Nedre gräns för x (Tryck Enter för -10): ")
        b = input("Övre gräns för x (tryck Enter för 10): ")
        a = float(a) if a else default_a
        b = float(b) if b else default_b
    except ValueError:
        print("Ogiltiga gränser, visar standardintervall (-10,10).")
        a, b = default_a, default_b
    
    sp.plot(
        *funktioner,
        (x, a, b),
        legend = True,
        show = True
    )
    
def efter_beräkning_meny(uttryck, x, extra_funktion=None, extra_label=None):
    eftermeny = {
    "1": "Visa grafen",
    "2": "Räkna ut ett nytt uttryck",
    "3": "Gå tillbaka till menyn"
    }

    efter_eftermeny = {
    "1": "Räkna ett nytt uttryck",
    "2": "Gå tillbaka till menyn"
    }

    while True:
        val = meny("Vad vill du göra nu? ", "Jag väljer: ", eftermeny)

        if val == "1":
            funktioner = [(uttryck, {"line_color": "blue", "label": "f(x)"})]
            if extra_funktion is not None:
                funktioner.append((extra_funktion, {"line_color": "red", "label": extra_label}))

            plotta_funktioner(funktioner, x)

            efter_val = meny("Vad vill du  göra nu?", "Jag väljer: ", efter_eftermeny)
            if efter_val == "1":
                return "ny"
            else:
                break
        elif val == "2":
            return "ny"
        elif val == "3":
            break

# HUVUDPROGRAM

huvudmeny = {
    "1": "Vanlig beräkning",
    "2": "Derivering",
    "3": "Integreration",
    "4": "Avsluta"
}



x = sp.Symbol("x")

while True:
    val = meny("Välj räknesätt: ",
               "Jag väljer: ",
               huvudmeny
    )

    # vanlig beräkning:
    if val == "1":
        while True:
            uttryck = input("Skriv ett uttryck: ")
            resultat = beräkna(uttryck)
            if resultat is not None:
                print(f"Resultat: {resultat:.3f}")

            ny = input("Vill du göra en ny beräkning? (ja/nej): ").lower()
            if ny == "nej":
                break

    # derivering:
    elif  val =='2':
        while True:
            nytt_uttryck = input("Ange ett uttryck: ").replace("X","x")
            uttryck_1 = sp.sympify(nytt_uttryck)
            derivata = sp.diff(uttryck_1, x)

            print(f"Derivatan av ({uttryck_1}) är: {derivata}")
            status = efter_beräkning_meny(uttryck_1, x, derivata, "f'(x)")
            if status != "ny":
                break
          
    # Integrering
    elif  val =='3':
        while True:
            nytt_uttryck = input("Ange ett uttryck: ").replace("X","x")
            uttryck_1 = sp.sympify(nytt_uttryck)

            bestämd = input("Bestämda gränser? (ja eller nej):  ").lower()
            if bestämd =='ja': 
                a = float(input("Nedre gränsen för x: "))
                b = float(input("Övre gränsen för x: "))
                integral = sp.integrate(uttryck_1, (x, a, b))
                print(f"Integralen av ({uttryck_1}) från {a} till {b} är: {integral} ")

            else: 
                integral = sp.integrate(uttryck_1, x)
                print(f"Integralen av ({uttryck_1}) är: {integral} + C")

            status = efter_beräkning_meny(uttryck_1, x, integral, "∫f(x)")
            if status != "ny":
                break 
                     
# AVSLUTA PROGRAMMET
    elif val == "4":
        print("Programmet avslutas.")
        break